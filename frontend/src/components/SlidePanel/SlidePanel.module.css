

.slidePanel {
    border-radius: 23px 23px 0 0;
    background: #FFF;
    box-shadow: 
        0px -3px 6.6px -3px rgba(175, 175, 175, 0.32),
        0px -8px 25px -5px rgba(0, 0, 0, 0.1),
        0px -3px 10px -2px rgba(0, 0, 0, 0.05);
    display: flex;
    flex-direction: column;
    overflow: hidden;
    transition: box-shadow 0.5s cubic-bezier(0.23, 1, 0.32, 1);
}

/* Enhanced shadow during drag for more tactile feedback */
.slidePanel.dragging {
    box-shadow: 
        0px -3px 6.6px -3px rgba(175, 175, 175, 0.32),
        0px -12px 35px -5px rgba(0, 0, 0, 0.15),
        0px -5px 15px -2px rgba(0, 0, 0, 0.08);
}

.slidePanelContainer {
    bottom: 0;
    /* Smooth transition when not being dragged - using Apple-style easing */
    transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
}

/* Drag Handle Styles */
.dragHandle {
    flex-shrink: 0;
    cursor: grab;
    user-select: none;
    padding: 8px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background: transparent;
    position: relative;
}

.dragHandle:active {
    cursor: grabbing;
}

/* Default drag handle appearance */
.defaultDragHandle {
    width: 40px;
    height: 4px;
    background-color: #d9d9d9;
    border-radius: 2px;
    transition: all 0.2s cubic-bezier(0.23, 1, 0.32, 1);
}

.dragHandle:hover .defaultDragHandle {
    background-color: #c5c5c5;
    transform: scaleY(1.2);
}

.dragHandle:active .defaultDragHandle {
    background-color: #c5c5c5;
    transform: scaleY(1.4);
}

/* Content Area */
.content {
    flex: 1;
    overflow-y: auto;
    padding: 0 16px 16px 16px;
    /* Ensure content interactions work normally */
    pointer-events: auto;
    /* Subtle indication that content area is draggable */
    cursor: grab;
}

.content:active {
    cursor: grabbing;
}

/* Override cursor for interactive elements */
.content input,
.content button,
.content select,
.content textarea,
.content a,
.content label,
.content [role="button"],
.content [role="link"],
.content [onclick],
.content [data-clickable] {
    cursor: auto;
}

.content input:hover,
.content button:hover,
.content select:hover,
.content textarea:hover,
.content a:hover,
.content label:hover,
.content [role="button"]:hover,
.content [role="link"]:hover {
    cursor: pointer;
}

/* Disable pointer events on drag handle area during drag to prevent interference */
.dragHandle.dragging {
    pointer-events: none;
}

/* Optional: Add a subtle border between handle and content */
.content::before {
    content: '';
    position: absolute;
    top: 0;
    left: 16px;
    right: 16px;
    height: 1px;
    background: linear-gradient(90deg, transparent 0%, #F3F4F6 20%, #F3F4F6 80%, transparent 100%);
}